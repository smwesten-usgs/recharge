{
    "collab_server" : "",
    "contents" : "#' Estimate recharge\n#'\n#' Estimate recharge by the method of hydrograph recession displacement.\n#'\n#' @param date the date of the flow, can be either character or class \"Date.\"\n#' @param discharge the mean daily discharge for the corresponding date.\n#' @param da the drainage area of the basin in square miles.\n#' @param recessIndex the recession index, in days per common log cycle.\n#'This is typically estimated using \\code{recess}.\n#' @param minimum_discharge the value to use for the minimum value in \\code{discharge}. Any\n#'value in \\code{discharge} less than the value for \\code{minimum_discharge} is set to the\n#'value for \\code{minimum_discharge}.\n#' @param incAnteRec a value to add to the base antecedent recession time,\n#'in days. In general, this should always be 0.\n#' @param STAID a character string to be used as the station identifier. This is\n#'used only for documentation when printing or plotting.\n#' @return An object of class rora, which has these components.\\cr\n#'iyear, the year of the observed streamflow. \\cr\n#'imonth, the month of the observed streamflow. \\cr\n#'iday, the day of the observed streamflow. \\cr\n#'fl, the observed streamflow. \\cr\n#'Nobs, the number of observed values of streamflow. \\cr\n#'iyearst, the starting year of the recharge analysis. \\cr\n#'iyearen, the ending year of the recharge analysis. \\cr\n#'minQ, the value of minQ. \\cr\n#'idiff, the value of incAnteRec. \\cr\n#'k, the value of recessIndex. \\cr\n#'te, the time to end day of the recession following a peak in streamflow, in days. \\cr\n#'ta, the time at the critical time after the previous peak. \\cr\n#'qp, the streamflow of the peak. \\cr\n#'qa, the streamflow the critical time after the previous peak. \\cr\n#'qb, the streamflow at the critical time that would have occurred in the\n#'absence of the current and any subsequent peaks. \\cr\n#'qc, the streamflow at the critical time that would have occurred\n#'in the absence of any subsequent peaks. \\cr\n#'c, the average value for the current peak calculated from the difference\n#'between the flow during recession and flow computed from the recession\n#'index for each day between the peak and the critical time. \\cr\n#'delq, the difference in flow between the hypothetical flow at the\n#'critical time after the current peak and the hypothetical flow at\n#'the critical time after the previous peak. \\cr\n#'rech, the estimated recharge for the peak, in inches. \\cr\n#'year, the year of the peak. \\cr\n#'mon, the month of the peak. \\cr\n#'day, the day of the peak. \\cr\n#'npeaks, the number of peaks. \\cr\n#'itbase, the antecedent flow base time, in days. This is the minimum time\n#'from a peak to when the flow can be considered to be ground-water discharge.\\cr\n#'ierr, the error code. \\cr\n#'STAID, the station identifier.\n#'\n#' @useDynLib DVstats roraf\n#' @export\nrora <- function(date, discharge, da, recessIndex,\n                 minimum_discharge=0.01, incAnteRec=0, STAID=NULL) {\n\n  discharge <- discharge[ !is.na( discharge ) ]\n  date <- date[ !is.na( discharge ) ]\n\n  iyearr <- lubridate::year( date )\n  imonth <- lubridate::month( date )\n  iday   <- lubridate::day( date )\n\n  N <- length(iyear)\n\n  retval <- .Fortran(\"roraf\",\n                     iyr=as.integer(iyear),\n                     imon=as.integer(imonth),\n                     idy=as.integer(iday),\n                     flow=as.double(discharge),\n                     Nobs=as.integer(N),\n                     da=as.double(da),\n                     iyearst=as.integer( min(iyear) ),\n                     iyearen=as.integer(max( iyear ) ),\n                     minQ=as.double( minimum_discharge ),\n                     idiff=as.integer(incAnteRec),\n                     k=as.double(recessIndex),\n                     te=integer(N),\n                     ta=numeric(N),\n                     qp=numeric(N),\n                     qa=numeric(N),\n                     qb=numeric(N),\n                     qc=numeric(N),\n                     c=numeric(N),\n                     delq=numeric(N),\n                     rech=numeric(N),\n                     year=integer(N),\n                     mon=integer(N),\n                     day=integer(N),\n                     npeaks=integer(1),\n                     itbase=integer(1),\n                     ierr=integer(1))\n  if(retval$ierr < 0)\n    warning(paste(\"Error code from rora: \", retval$ierr))\n  if(retval$ierr > 0)\n    stop(paste(\"Error code from rora: \", retval$ierr))\n  Npeaks <- retval$npeaks\n  length(retval$te) <- Npeaks\n  length(retval$ta) <- Npeaks\n  length(retval$qp) <- Npeaks\n  length(retval$qa) <- Npeaks\n  length(retval$qb) <- Npeaks\n  length(retval$qc) <- Npeaks\n  length(retval$c) <- Npeaks\n  length(retval$delq) <- Npeaks\n  length(retval$rech) <- Npeaks\n  length(retval$year) <- Npeaks\n  length(retval$mon) <- Npeaks\n  length(retval$day) <- Npeaks\n  if(!is.null(STAID))\n    retval$STAID <- STAID\n  oldClass(retval) <- \"rora\"\n  return(retval)\n}\n",
    "created" : 1503509895214.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1340469189",
    "id" : "A027AE91",
    "lastKnownWriteTime" : 1503510762,
    "last_content_update" : 1503510796744,
    "path" : "/Volumes/smwesten/Source_Code/recharge/R/rora.R",
    "project_path" : "R/rora.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}